[project]
name = "dana-journal"
version = "0.1.0"
description = "Dana - safe journal space: A privacy-first desktop journaling companion with local AI support"
authors = [
    {name = "Dana Team"}
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "flet[all]==0.28.3",
    "pydantic>=2.8.0",
    "python-dateutil>=2.9.0",
    "pyyaml>=6.0.2",
    "llama-cpp-python>=0.2.90",
    "huggingface-hub>=0.25.0",
    "psutil>=5.9.0",
    "requests>=2.31.0",
]

[project.scripts]
dana-journal = "main:main"
dana = "main:main"

[project.gui-scripts]
dana = "main:main"

[tool.flet]
# Product Information
product = "Dana - safe journal space"
company = "Dana Team"
copyright = "Copyright (C) 2025 Dana Team"
build_number = 5
build_version = "0.1.0"

# App Configuration
[tool.flet.app]
path = "src"

# Icons Configuration
[tool.flet.icons]
# Universal icon (fallback)
icon = "src/assets/icons/dana_icon_512x512.png"
# Platform-specific icons
icon_macos = "src/assets/icons/dana_icon_512x512.png"
icon_windows = "src/assets/icons/dana_icon_256x256.png"
icon_linux = "src/assets/icons/dana_icon_256x256.png"
icon_web = "src/assets/icons/dana_icon_256x256.png"

# App Metadata
[tool.flet.metadata]
short_description = "Privacy-first desktop journaling companion with local AI support"
long_description = "Dana - safe journal space is a privacy-first desktop journaling application that keeps all your data local while providing AI-powered insights through your personal writing companion."
keywords = ["journal", "privacy", "AI", "writing", "personal", "local", "companion"]
category = "productivity"

# Permissions (primarily for mobile builds)
[tool.flet.permissions]
# File system access for journal storage
storage = true
# Optional camera access for future photo journaling
camera = false
# Microphone for future voice notes
microphone = false
# Location for future location-based entries
location = false

# Build Settings
[tool.flet.build]
# Include all Python packages in build
include_packages = ["llama_cpp", "huggingface_hub", "requests", "psutil"]
# Compile Python files for better performance
compile_app = true
# Clean temporary files after build
cleanup_on_exit = true
# Enable verbose logging during build
verbose = true

# Platform-specific build configurations
[tool.flet.build.macos]
bundle_id = "com.danateam.dana-journal"
category = "public.app-category.productivity"
minimum_system_version = "11.0"
# Code signing (to be configured later)
# codesign_identity = "Developer ID Application: Dana Team"

[tool.flet.build.windows]
# Windows-specific build settings
console = false
file_description = "Dana - safe journal space"
company_name = "Dana Team"
file_version = "0.1.0"
product_version = "0.1.0"

[tool.flet.build.linux]
# Linux package information
category = "Office"
generic_name = "Journal Application"
mime_type = ["text/markdown", "text/plain"]

[tool.flet.build.web]
# PWA configuration
route_url_strategy = "path"
use_color_emoji = true
# Service worker for offline functionality
service_worker_js = "sw.js"

# Compilation Settings
[tool.flet.compile]
app = true
packages = true
cleanup = true

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "black>=24.0.0",
    "ruff>=0.5.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ['py311']

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--color=yes"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "ai: marks tests that require AI functionality",
    "integration: marks tests as integration tests",
    "ui: marks tests that test UI components"
]
testmon = false
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "ruff>=0.12.7",
]
